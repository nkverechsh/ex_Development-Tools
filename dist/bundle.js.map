{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ex_development-tools/./src/js/cards.js","webpack://ex_development-tools/./src/js/startPage.js","webpack://ex_development-tools/./src/js/game.js"],"sourcesContent":["const cardsGrade = ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']\n\nconst cardsSuit = ['clubs', 'diamonds', 'hearts', 'spades']\n\nexport {cardsGrade, cardsSuit}","import '../../index.css';\nimport game from \"./game.js\";\n\n\nfunction saveLevel(newLevel) {\n    localStorage.setItem(\"level\", JSON.stringify(newLevel))\n}\n\nfunction loadLevel() {\n    return localStorage.getItem(\"level\") ? JSON.parse(localStorage.getItem(\"level\")) : \"easy\"\n}\n\nfunction startPage() {\n    const add = document.querySelector(\"#add\")\n    const html = `\n        <div class=\"complexity\">\n        <h1 class=\"complexity__text\">Выбери</br>сложность</h1>\n\n      <div class=\"complexity__level\">\n          <button class=\"complexity__level_variant complexity__level_variant_easy\">\n          <input type=\"radio\" ${\n              loadLevel() === \"easy\" ? \"checked\" : null\n          } name=\"checkbox\" value=\"easy\">\n          <span>1</span></button>\n          <button class=\"complexity__level_variant complexity__level_variant_medium\">\n          <input type=\"radio\" ${\n              loadLevel() === \"medium\" ? \"checked\" : null\n          } name=\"checkbox\" value=\"medium\">\n          <span>2</span></button>\n          <button class=\"complexity__level_variant complexity__level_variant_hard\">\n          <input type=\"radio\" ${\n              loadLevel() === \"hard\" ? \"checked\" : null\n          } name=\"checkbox\" value=\"hard\">\n          <span>3</span></button>\n      </div>\n\n          <button type=\"submit\" class=\"start__game\">\n              <p class=\"start__game_text\">Старт</p>\t\n          </button>\n        </div>\n    `\n    add.innerHTML = html\n\n    document\n        .querySelector(\".complexity__level_variant_easy\")\n        .addEventListener(\"change\", () => saveLevel(\"easy\"))\n    document\n        .querySelector(\".complexity__level_variant_medium\")\n        .addEventListener(\"change\", () => saveLevel(\"medium\"))\n    document\n        .querySelector(\".complexity__level_variant_hard\")\n        .addEventListener(\"change\", () => saveLevel(\"hard\"))\n    document\n        .querySelector(\".start__game\")\n        .addEventListener(\"click\", () => game())\n}\n\nstartPage()\n","import { cardsGrade, cardsSuit } from \"./cards.js\"\n\nexport default function game() {\n    function renderCards (card) {\n        const htmlCards = `\n        <div class=\"play-card\">\n            <p class=\"play-card__text play-card__text_head\">${card.cardsGrade}</p>\n            <img class=\"play-card__back none\" src=\"./../../static/img/card-back.svg\" alt=\"\">\n            <img class=\"play-card__img play-card__img_head\" src=\"./static/img/${card.cardsSuit}.svg\" alt=\"\">\n            <img class=\"play-card__img play-card__img_middle\" src=\"./static/img/${card.cardsSuit}.svg\" alt=\"\">\n            <img class=\"play-card__img play-card__img_footer\" src=\"./static/img/${card.cardsSuit}.svg\" alt=\"\">\n            <p class=\"play-card__text play-card__text_footer\">${card.cardsGrade}</p>\n    </div>\n`\ndocument.querySelector('.next-page__cards').insertAdjacentHTML('afterbegin', htmlCards)\n}\n\n    function renderContainer() {\n        const html = `\n\n                <div class=\"game-page\">\n                    <div class=\"game-page__title\">\n                        <div class=\"game-page__timer\">\n                            <pre class=\"game-page__timer-min\">min           sec</pre>\n                            <h2 class=\"game-page__time\">00.00</h2>\n                        </div>\n                        <button class=\"game-page__key repeat-key\">\n                            Начать заново\n                        </button>\n                    </div>\n                        <div class=\"game-page__cards\">\n                        </div>\n                </div>\n\n        `\n\n        document.querySelector(\"#add\").innerHTML = html\n    }\n\n    const level = JSON.parse(localStorage.getItem(\"level\"))\n\n    function shuffle(cards) {\n        const shuffleArray = (array) => {\n            for (let i = array.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [array[i], array[j]] = [array[j], array[i]];\n            }\n            return array;\n        }\n\n        const shuffledCards = shuffleArray(cardsGrade.flatMap(grade => cardsSuit.map(suit => ({ cardsGrade: grade, cardsSuit: suit }))))\n        const selectedCards = shuffledCards.slice(0, cards)\n        const duplicatedCards = shuffleArray([...selectedCards, ...selectedCards])\n\n        renderPage(duplicatedCards)\n    }\n\n    switch (level) {\n        case 'easy':\n            shuffle(3)\n        break;\n\n        case 'medium':\n            shuffle(6)\n        break;\n\n        case 'hard':\n            shuffle(9)\n        break;\n    }\n\n    const findCards = document.querySelectorAll('.play-card__back')\n    for (const card of findCards) {\n        card.addEventListener('click', () => {\n            card.classList.add('none')\n        })\n    }\n\n    const cards = Array.from(document.querySelectorAll('.play-card'));\n\n    cards.forEach((card) => card.addEventListener('click', () => {\n        card.classList.add('open')\n\n        let openCards = cards.filter((card) => card.classList.contains('open'))\n        openCards.forEach((card) => card.classList.add('win-card'))\n        let winCards = cards.filter((card) => card.classList.contains('win-card'))\n        if (winCards.length === cards.length) {\n            console.log('u win');\n        }\n\n        if (openCards.length === 2) {\n            if (openCards[0].getAttribute('data-cardsGrade') === openCards[1].getAttribute('data-cardsGrade') && openCards[0].getAttribute('data-cardsSuit') === openCards[1].getAttribute('data-cardsSuit')) {\n                openCards.forEach((card) => card.classList.remove('open'));\n                return\n            }\n            if (openCards[0].getAttribute('data-cardsGrade') !== openCards[1].getAttribute('data-cardsGrade') && openCards[0].getAttribute('data-cardsSuit') !== openCards[1].getAttribute('data-cardsSuit')) {\n                console.warn('The game is over!');\n                openCards.forEach((card) => card.classList.remove('open'));\n            }\n            openCards = [];\n        }\n    }));\n\n    setTimeout (() => {\n        const hiddenCards = document.querySelectorAll('.play-card__back')\n        hiddenCards.forEach((card) => {\n            card.classList.remove('none')\n        })\n    }, 5000)\n\n    function renderPage(selectedCards) {\n        renderContainer()\n        selectedCards.forEach((card) => {\n        renderCards(card)\n        })\n    }\n}"],"names":["cardsGrade","cardsSuit","saveLevel","newLevel","localStorage","setItem","JSON","stringify","loadLevel","getItem","parse","add","document","querySelector","html","innerHTML","addEventListener","shuffle","cards","shuffleArray","array","i","length","j","Math","floor","random","selectedCards","flatMap","grade","map","suit","slice","forEach","card","htmlCards","insertAdjacentHTML","renderCards","renderPage","findCards","querySelectorAll","classList","Array","from","openCards","filter","contains","winCards","console","log","getAttribute","remove","warn","setTimeout","game","startPage"],"sourceRoot":""}